<Window x:Class="lineRegressionGFK.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:lineRegressionGFK"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm="clr-namespace:lineRegressionGFK.VM"
        xmlns:models="clr-namespace:lineRegressionGFK.Models"
        xmlns:converter="clr-namespace:lineRegressionGFK.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="651.203" Width="534.19"
        x:Name="MainWindowControl">
    <Window.Resources>
        <vm:MainPageViewModel x:Key="MainPageViewModel" x:Name="MainPageViewModel"/>
        <models:PointTypeEnum x:Key="PointTypeEnumEllipse">Ellipse</models:PointTypeEnum>
        <models:PointTypeEnum x:Key="PointTypeEnumRectangle">Rectangle</models:PointTypeEnum>
        <converter:StringToInt32Converter x:Key="StringToInt32Converter"></converter:StringToInt32Converter>
        <converter:StringToDoubleConverter x:Key="StringToDoubleConverter"></converter:StringToDoubleConverter>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></converter:BoolToVisibilityConverter>
        <converter:PointPositionScaleConverter x:Key="PointPositionScaleConverter"></converter:PointPositionScaleConverter>
        <converter:SizePartsToSizeConverter x:Key="SizePartsToSizeConverter"></converter:SizePartsToSizeConverter>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="MainPageViewModel"></StaticResource>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="8*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <DockPanel Margin="6">
                <Label Content="{Binding XLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                <TextBox Text="{Binding CurrentXValue, Mode=TwoWay, Converter={StaticResource StringToInt32Converter}}" VerticalAlignment="Center"/>
            </DockPanel>
            <DockPanel Margin="6">
                <Label Content="{Binding YLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                <TextBox Text="{Binding CurrentYValue, Mode=TwoWay, Converter={StaticResource StringToInt32Converter}}" VerticalAlignment="Center"/>
            </DockPanel>
            <Button Content="{Binding AddButtonText}" Command="{Binding AddButtonCommand}" Margin="6"></Button>
            <Button Content="{Binding FromFileText}" Command="{Binding FromFileCommand}" Margin="6"></Button>
            <Button Content="{Binding SaveAsText}" Command="{Binding SaveAsCommand}" Margin="6"></Button>
            <ListView ItemsSource="{Binding PointsCollection}" Margin="6">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="F("></Label>
                            <Label Content="{Binding X}" HorizontalAlignment="Left"></Label>
                            <Label Content=") = " HorizontalAlignment="Left"></Label>
                            <Label Content="{Binding Y}" HorizontalAlignment="Left"></Label>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <Grid Grid.Column="1" x:Name="ChartCanvas" Background="Orange">
            <Grid.RowDefinitions>
                <RowDefinition Height="7*"></RowDefinition>
                <RowDefinition Height="3*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid x:Name="ChartGridContainer">
                <ItemsControl ItemsSource="{Binding Path=HorizontalLinesCollection}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="{Binding BackgroundBrush}" Margin="10">
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Rectangle Fill="{Binding LineBrush, Source={StaticResource MainPageViewModel}}" Width="{Binding Size}" Height="1px" Opacity="{Binding Opacity}" VerticalAlignment="Bottom"></Rectangle>
                                <TextBlock Text="{Binding StringValue}" Foreground="{Binding LineBrush, Source={StaticResource MainPageViewModel}}">
                                    <TextBlock.Margin>
                                        <Thickness>15,0,0,0</Thickness>
                                    </TextBlock.Margin>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Bottom" Value="{Binding Path=PositionFromBeggining}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding Path=VerticalLinesCollection}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="Transparent" Margin="10">
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Rectangle Fill="{Binding LineBrush, Source={StaticResource MainPageViewModel}}" Width="1px" Height="{Binding Size}" Opacity="{Binding Opacity}" HorizontalAlignment="Left"></Rectangle>
                                <TextBlock Text="{Binding StringValue}" Foreground="{Binding LineBrush, Source={StaticResource MainPageViewModel}}" VerticalAlignment="Bottom">
                                    <TextBlock.Margin>
                                        <Thickness>0,0,0,0</Thickness>
                                    </TextBlock.Margin>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Path=PositionFromBeggining}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding Path=PointsCollection}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="Transparent" Margin="10">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SizeChanged">
                                        <i:InvokeCommandAction Command="{Binding SizeChangedCommand}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <MultiBinding Converter="{StaticResource SizePartsToSizeConverter}">
                                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Canvas}}"/>
                                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Canvas}}"/>
                                                </MultiBinding>
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding SizeChangedCommand}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <MultiBinding Converter="{StaticResource SizePartsToSizeConverter}">
                                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Canvas}}"/>
                                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Canvas}}"/>
                                                </MultiBinding>
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Ellipse Visibility="{Binding EllipseTypePoint, Source={StaticResource MainPageViewModel}, Converter={StaticResource BoolToVisibilityConverter}}" Fill="{Binding PointBrush, Source={StaticResource MainPageViewModel}}" Width="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" Height="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" />
                                <Rectangle Visibility="{Binding RectangleTypePoint, Source={StaticResource MainPageViewModel}, Converter={StaticResource BoolToVisibilityConverter}}" Fill="{Binding PointBrush, Source={StaticResource MainPageViewModel}}" Width="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" Height="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" />
                                <Rectangle Visibility="{Binding DiamondTypePoint, Source={StaticResource MainPageViewModel}, Converter={StaticResource BoolToVisibilityConverter}}" Fill="{Binding PointBrush, Source={StaticResource MainPageViewModel}}" Width="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" Height="{Binding PointRadius, Source={StaticResource MainPageViewModel}}" RenderTransformOrigin="0.5,0.5" >
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="45"/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Bottom" Value="{Binding Path=YForChart}" />
                            <Setter Property="Canvas.Left" Value="{Binding Path=XForChart}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>

            <StackPanel Grid.Row="1">
                <DockPanel Margin="6">
                    <Label Content="{Binding YDeltaLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <TextBox Text="{Binding LineHighDelta, Mode=TwoWay, Converter={StaticResource StringToDoubleConverter}}" VerticalAlignment="Center"/>
                </DockPanel>
                <DockPanel Margin="6">
                    <Label Content="{Binding XDeltaLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <TextBox Text="{Binding LineWidthDelta, Mode=TwoWay, Converter={StaticResource StringToDoubleConverter}}" VerticalAlignment="Center"/>
                </DockPanel>
                <DockPanel Margin="6">
                    <Label Content="{Binding PointColorLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <xctk:ColorPicker SelectedColor="{Binding PointColor}"/>
                </DockPanel>
                <DockPanel Margin="6">
                    <Label Content="{Binding LineColorLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <xctk:ColorPicker SelectedColor="{Binding LineColor}"/>
                </DockPanel>
                <DockPanel Margin="6">
                    <Label Content="{Binding BackgroundColorLabelText}" HorizontalAlignment="Left" VerticalAlignment="Center"></Label>
                    <xctk:ColorPicker SelectedColor="{Binding BackgroundColor}"/>
                </DockPanel>
                <StackPanel Orientation="Vertical">
                    <RadioButton Content="{Binding EllipseTypePointLabelText}" IsChecked="{Binding EllipseTypePoint}"></RadioButton>
                    <RadioButton Content="{Binding RectangleTypePointLabelText}" IsChecked="{Binding RectangleTypePoint}"></RadioButton>
                    <RadioButton Content="{Binding DiamondTypePointLabelText}" IsChecked="{Binding DiamondTypePoint}"></RadioButton>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
